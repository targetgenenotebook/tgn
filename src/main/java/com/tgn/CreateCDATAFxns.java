package com.tgn;

public class CreateCDATAFxns {

    public static String getCDATAFxns(String gene_symbol, Layout layout) {
    	
		StringBuffer ssb = new StringBuffer();
		ssb.append("var gene_symbol='"+QuoteEscape.quote_escape(gene_symbol)+"';\n");
		ssb.append("var shouldshowlocation=0;\n");
		ssb.append("var akmouseDown=0;\n");
		ssb.append("var chrom_low = "+layout.chrom_low+";\n");
		ssb.append("var ak_tss = "+layout.tss+";\n");
		ssb.append("var ak_tss_dir = "+layout.tss_dir+";\n");
		ssb.append("var svg_height = "+layout.svg_height+";\n");
		ssb.append("var svg_width = "+layout.svg_width+";\n");
		ssb.append("var svg_units_per_base = "+layout.svg_units_per_base+";\n");
		ssb.append("var svgNS = \"http://www.w3.org/2000/svg\";\n");

		ssb.append("var svginit = function(evt) {\n");
		ssb.append("  var x = document.getElementsByClassName(\"akgenename\");\n");
		ssb.append("  var i;\n");
		ssb.append("  for (i = 0; i < x.length; i++) {\n");
		ssb.append("    var sz = x[i].getAttribute('font-size');\n");
		ssb.append("    while (x[i].getBBox().width>150 && sz>0) {\n");
		ssb.append("      sz--;\n");
		ssb.append("      x[i].setAttribute('font-size', sz);\n");
		ssb.append("    }\n");
		ssb.append("  }\n");
		ssb.append("  x = document.getElementsByClassName(\"akgwastext\");\n");
		ssb.append("  for (i = 0; i < x.length; i++) {\n");
		ssb.append("    var ox = Number(x[i].getAttribute('data-origsvgx'));\n");
		ssb.append("    x[i].setAttribute('transform','scale(1,1)');\n");
		ssb.append("    var w = x[i].getBBox().width;\n");
		ssb.append("    if (ox - w/2.0 < 5.0) {\n");
		ssb.append("      ox = 5.0 + w/2.0;\n");
		ssb.append("    }\n");
		ssb.append("    if (ox + w/2.0 > svg_width - 5.0) {\n");
		ssb.append("      ox = (svg_width - 5.0) - w/2.0;\n");
		ssb.append("    }\n");
		ssb.append("    x[i].setAttribute('x',(ox));\n");
		ssb.append("  }\n");
		ssb.append("  x = document.getElementsByClassName(\"akeqtltext\");\n");
		ssb.append("  for (i = 0; i < x.length; i++) {\n");
		ssb.append("    var ox = Number(x[i].getAttribute('data-origsvgx'));\n");
		ssb.append("    x[i].setAttribute('transform','scale(1,1)');\n");
		ssb.append("    var w = x[i].getBBox().width;\n");
		ssb.append("    if (ox - w/2.0 < 5.0) {\n");
		ssb.append("      ox = 5.0 + w/2.0;\n");
		ssb.append("    }\n");
		ssb.append("    if (ox + w/2.0 > svg_width - 5.0) {\n");
		ssb.append("      ox = (svg_width - 5.0) - w/2.0;\n");
		ssb.append("    }\n");
		ssb.append("    x[i].setAttribute('x',(ox));\n");
		ssb.append("  }\n");
		ssb.append("  x = document.getElementsByClassName(\"akldgtext\");\n");
		ssb.append("  if (x.length>0) {");
		ssb.append("    var sz = x[0].getAttribute('font-size');\n");
		ssb.append("    var anyfail = 1;\n");
		ssb.append("    while (anyfail==1) {");
		ssb.append("      anyfail=0;\n");
		ssb.append("      for (i = 0; i < x.length; i++) {\n");
		ssb.append("        var ss = Number(x[i].getAttribute('data-squaresize'));\n");		
		ssb.append("        x[i].setAttribute('font-size', sz);\n");
		ssb.append("        if (x[i].getBBox().width>ss-5) {\n");
		ssb.append("          anyfail=1;\n");
		ssb.append("        }\n");
		ssb.append("      }\n");
		ssb.append("      if (sz==1) {break;}\n");
		ssb.append("      if (anyfail==1) {sz--;}\n");		
		ssb.append("    }\n");
		ssb.append("  }\n");
		ssb.append("}\n");
		ssb.append("\n");

		ssb.append("function HideTooltip(evt) {\n");
		ssb.append("  shouldshowlocation = 0;\n");
		ssb.append("  tooltip.setAttributeNS(null,\"visibility\",\"hidden\");\n");
		ssb.append("  tooltip_bg.setAttributeNS(null,\"visibility\",\"hidden\");\n");
		ssb.append("}\n");
		ssb.append("\n");

		ssb.append("function populatesupldiv(evt) {\n");
		ssb.append("  if (window.parent.fill_supl_div) {\n");
		ssb.append("    var supl = evt.target.parentElement.getAttribute(\"data-supl\");\n");
		ssb.append("    var supltype = evt.target.parentElement.getAttribute(\"data-supltype\");\n");
		ssb.append("    var classname = evt.target.parentElement.getAttribute(\"data-class\");\n");	
		ssb.append("    var ldgids = evt.target.parentElement.getAttribute(\"data-ldgids\");\n");	
		ssb.append("    window.parent.fill_supl_div(supl, ldgids, supltype, classname);\n");
		ssb.append("  }\n");
		ssb.append("}\n");
		ssb.append("\n");
		
		ssb.append("function populatesupldiv2(evt) {\n");
		ssb.append("  if (window.parent.fill_supl_div) {\n");
		ssb.append("    var supl = evt.target.getAttribute(\"data-supl\");\n");
		ssb.append("    var supltype = evt.target.getAttribute(\"data-supltype\");\n");
		ssb.append("    var id = evt.target.getAttribute(\"id\");\n");	
		ssb.append("    window.parent.fill_supl_div(supl, id, supltype, null);\n");
		ssb.append("  }\n");
		ssb.append("}\n");
		ssb.append("\n");
		
		ssb.append("function ShowLocation(evt, inititate) {\n");
		ssb.append("  if (inititate==1 || shouldshowlocation==1) {\n");
		ssb.append("    var position = evt.target.ownerSVGElement.createSVGPoint();\n");
		ssb.append("    position.x = evt.clientX;\n");
		ssb.append("    position.y = evt.clientY;\n");
		ssb.append("    var matrix = evt.target.getScreenCTM();\n");
		ssb.append("    var correctPosition=position.matrixTransform(matrix.inverse());\n");
		ssb.append("    var mousx = correctPosition.x;\n");
		ssb.append("    var mousy = correctPosition.y;\n");
		ssb.append("    shouldshowlocation = 1;\n");
		ssb.append("    var chrom_location = chrom_low + mousx/svg_units_per_base;\n");
		ssb.append("    var tss_distance = chrom_location-ak_tss;\n");
		ssb.append("    tss_distance *= ak_tss_dir;\n");
		ssb.append("    var tss_distance2 = Math.round(tss_distance);\n");
		ssb.append("    var tss_distance3 = tss_distance2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n");
		ssb.append("    if (tss_distance2>0) {tss_distance3='+'+tss_distance3;}\n");
		ssb.append("    var chrom_location2 = Math.round(chrom_location);\n");
		ssb.append("    var chrom_location3 = chrom_location2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n");
		ssb.append("    var mot = 'Chromosome location:#    '+chrom_location3+'#Stranded offset from TSS:#    '+tss_distance3;\n");
		ssb.append("    ShowTooltip(evt, mot);");
		ssb.append("  }\n");
		ssb.append("}\n");

		ssb.append("function ShowTooltip(evt, mouseovertext) {\n");
		ssb.append("  while (tooltip.firstChild) {\n");
		ssb.append("    tooltip.removeChild(tooltip.firstChild);\n");
		ssb.append("  }\n");
		ssb.append("  var position = evt.target.ownerSVGElement.createSVGPoint();\n");
		ssb.append("  position.x = evt.clientX;\n");
		ssb.append("  position.y = evt.clientY;\n");
		ssb.append("  var matrix = evt.target.getScreenCTM();\n");
		ssb.append("  var correctPosition=position.matrixTransform(matrix.inverse());\n");
		ssb.append("  var mousx = correctPosition.x;\n");
		ssb.append("  var mousy = correctPosition.y;\n");
		ssb.append("  var scale_x = 1.0;\n");
		ssb.append("  var box_x = mousx+8.0;\n");
		ssb.append("  var xtra_x = 3.0;\n");
		ssb.append("  tooltip_bg.setAttributeNS(null, 'transform','scale('+scale_x+',1)');\n");
		ssb.append("  tooltip.setAttributeNS(null, 'transform','scale('+scale_x+',1)');\n");
		ssb.append("  var lines = mouseovertext.split('#');\n");
		ssb.append("  var widestline = 0.0;\n");
		ssb.append("  for (i = 0; i < lines.length; i++) {\n");
		ssb.append("    if (lines[i].length==0) {continue;}\n");
		ssb.append("    var tspan_element = document.createElementNS(svgNS, \"tspan\");\n");
		ssb.append("    var text_node = document.createTextNode(lines[i]);\n");
		ssb.append("    tspan_element.appendChild(text_node);\n");
		ssb.append("    tooltip.appendChild(tspan_element);\n");
		ssb.append("    var w = 8.0+tspan_element.getComputedTextLength();\n");
		ssb.append("    if (w>widestline) {widestline=w;}\n");
		ssb.append("  }\n");
		ssb.append("  while (tooltip.firstChild) {\n");
		ssb.append("    tooltip.removeChild(tooltip.firstChild);\n");
		ssb.append("  }\n");
		ssb.append("  if (box_x + widestline > svg_width) {\n");
		ssb.append("    box_x = mousx - (widestline+8);\n");
		ssb.append("  }\n");
		ssb.append("  var hght = lines.length*15+2;\n");
		ssb.append("  var bg_y = evt.offsetY+13;\n");
		ssb.append("  if (bg_y+(hght-1)>svg_height) {\n");
		ssb.append("    bg_y = svg_height - (hght-1);\n");
		ssb.append("  }\n");
		ssb.append("  if (bg_y<0) {\n");
		ssb.append("    bg_y = 0;\n");
		ssb.append("  }\n");
		ssb.append("  var tt_y = bg_y+13;\n");	
		ssb.append("  tooltip.setAttributeNS(null,\"x\",(box_x+xtra_x)/scale_x);\n");
		ssb.append("  tooltip.setAttributeNS(null,\"y\",tt_y);\n");
		ssb.append("  var doublespace = 0;\n");	
		ssb.append("  for (i = 0; i < lines.length; i++) {\n");
		ssb.append("    if (lines[i].length==0) {doublespace=1;continue;}\n");
		ssb.append("    var tspan_element = document.createElementNS(svgNS, \"tspan\");\n");
		ssb.append("    var text_node = document.createTextNode(lines[i]);\n");
		ssb.append("    if (i>0) {\n");
		ssb.append("	  tspan_element.setAttributeNS(null, \"x\", (box_x+xtra_x)/scale_x);\n");
		ssb.append("      if (doublespace == 0) {\n");	
		ssb.append("	    tspan_element.setAttributeNS(null, \"dy\", 15);\n");
		ssb.append("      } else {\n");
		ssb.append("	    tspan_element.setAttributeNS(null, \"dy\", 30);\n");
		ssb.append("      }\n");
		ssb.append("    }\n");
		ssb.append("    tspan_element.appendChild(text_node);\n");
		ssb.append("    tooltip.appendChild(tspan_element);\n");
		ssb.append("    doublespace = 0;\n");	
		ssb.append("  }\n");
		ssb.append("  tooltip.setAttributeNS(null,\"visibility\",\"visible\");\n");
		ssb.append("  tooltip_bg.setAttributeNS(null,\"width\",widestline);\n");
		ssb.append("  tooltip_bg.setAttributeNS(null,\"height\",hght);\n");
		ssb.append("  tooltip_bg.setAttributeNS(null,\"x\",box_x/scale_x);\n");
		ssb.append("  tooltip_bg.setAttributeNS(null,\"y\",bg_y);\n");
		ssb.append("  tooltip_bg.setAttributeNS(null,\"visibility\",\"visibile\");\n");
		ssb.append("}\n");
		ssb.append("\n");

		ssb.append("var highlightvariants = function(vname) {\n");
		ssb.append("  var x1 = document.getElementsByClassName(vname);\n");
		ssb.append("  if (x1.length > 1) {\n");
		ssb.append("    var i;\n");
		ssb.append("    for (i = 0; i < x1.length; i++) {\n");
		ssb.append("      x1[i].setAttribute('fill', '#00ffff');\n");
		ssb.append("    }\n");
		ssb.append("  }\n");
		ssb.append("}\n");
		ssb.append("\n");

		ssb.append("var hideanddehighlight = function(vname, evt) {\n");
		ssb.append("  dehighlightvariants(vname);\n");
		ssb.append("  HideTooltip(evt);\n");
		ssb.append("}\n");
		ssb.append("\n");

		ssb.append("var dehighlightvariants = function(vname) {\n");
		ssb.append("  var x1 = document.getElementsByClassName(vname);\n");
		ssb.append("  if (x1.length > 1) {\n");
		ssb.append("    var i;\n");
		ssb.append("    for (i = 0; i < x1.length; i++) {\n");
		ssb.append("      var nf = x1[i].getAttribute('data-normalfill');\n");
		ssb.append("      x1[i].setAttribute('fill', nf);\n");
		ssb.append("    }\n");
		ssb.append("  }\n");
		ssb.append("}\n");
		ssb.append("\n");

		ssb.append("\n");
		return ssb.toString();
    }
    
}